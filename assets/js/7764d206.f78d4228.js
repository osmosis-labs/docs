"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[994],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),m=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,d=c["".concat(l,".").concat(u)]||c[u]||k[u]||i;return a?n.createElement(d,o(o({ref:t},s),{},{components:a})):n.createElement(d,o({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var m=2;m<i;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},29623:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>k,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const i={},o="beaker wasm proposal",p={unversionedId:"commands/beaker_wasm_proposal",id:"commands/beaker_wasm_proposal",title:"beaker wasm proposal",description:"Arguments:",source:"@site/docs/beaker/commands/beaker_wasm_proposal.md",sourceDirName:"commands",slug:"/commands/beaker_wasm_proposal",permalink:"/beaker/commands/beaker_wasm_proposal",draft:!1,editUrl:"https://github.com/osmosis-labs/docs/tree/main/docs/beaker/commands/beaker_wasm_proposal.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"beaker wasm",permalink:"/beaker/commands/beaker_wasm"},next:{title:"beaker wasm proposal query",permalink:"/beaker/commands/beaker_wasm_proposal_query"}},l={},m=[{value:"Subcommands",id:"subcommands",level:2},{value:"<code>beaker wasm proposal store-code</code>",id:"beaker-wasm-proposal-store-code",level:3},{value:"<code>beaker wasm proposal vote</code>",id:"beaker-wasm-proposal-vote",level:3},{value:"<code>beaker wasm proposal query</code>",id:"beaker-wasm-proposal-query",level:3}],s={toc:m};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"beaker-wasm-proposal"},(0,r.kt)("inlineCode",{parentName:"h1"},"beaker wasm proposal")),(0,r.kt)("p",null,"Arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--help"),": Print help information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--version"),": Print version information"))),(0,r.kt)("h2",{id:"subcommands"},"Subcommands"),(0,r.kt)("h3",{id:"beaker-wasm-proposal-store-code"},(0,r.kt)("inlineCode",{parentName:"h3"},"beaker wasm proposal store-code")),(0,r.kt)("p",null,"Proposal for storing .wasm on chain for later initialization"),(0,r.kt)("p",null,"Arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--help"),": Print help information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--version"),": Print version information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"}," <contract-name>"),"Name of the contract to store")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--permit-instantiate-only <permit-instantiate-only>"),": Restricting the code to be able to instantiate/migrate only by given address, no restriction by default")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"-p/--proposal <proposal>"),": Path to proposal file, could be either yaml / toml format")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--title <title>"),": Proposal title (default: ``)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--description <description>"),": Proposal description (default: ``)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--deposit <deposit>"),": Proposal deposit to activate voting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--repo <repo>"),": Public repository of the code (default: ``)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--rust-flags <rust-flags>"),': RUST_FLAGS that passed while compiling to wasm If building with Beaker, it\'s usually "-C link-arg=-s"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--optimizer <optimizer>"),": Type and version of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/rust-optimizer"},"optimizer"),", either: rust-optimizer:",(0,r.kt)("version",null," or workspace-optimizer:"),". Beaker use workspace-optimizer, the version, if not manually configured, can be found in ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm")," config doc")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"-n/--network <network>"),": Name of the network to broadcast transaction to, the actual endpoint / chain-id are defined in config (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"local"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--gas <gas>"),": Coin (amount and denom) you are willing to pay as gas eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"1000uosmo"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--gas-limit <gas-limit>"),": Limit to how much gas amount allowed to be consumed")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--signer-account <signer-account>"),": Specifies predefined account as a tx signer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--signer-keyring <signer-keyring>"),": Specifies private_key as a tx signer (base64 encoded string)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--signer-mnemonic <signer-mnemonic>"),": Specifies mnemonic as a tx signer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--signer-private-key <signer-private-key>"),": Specifies private_key as a tx signer (base64 encoded string)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"-t/--timeout-height <timeout-height>"),": Specifies a block timeout height to prevent the tx from being committed past a certain height (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),")"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"beaker-wasm-proposal-vote"},(0,r.kt)("inlineCode",{parentName:"h3"},"beaker wasm proposal vote")),(0,r.kt)("p",null,"Vote for proposal"),(0,r.kt)("p",null,"Arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--help"),": Print help information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--version"),": Print version information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"}," <contract-name>"),"Name of the contract to store")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"-o/--option <option>"),": Vote option, one of: yes, no, no_with_veto, abstain")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"-n/--network <network>"),": Name of the network to broadcast transaction to, the actual endpoint / chain-id are defined in config (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"local"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--gas <gas>"),": Coin (amount and denom) you are willing to pay as gas eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"1000uosmo"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--gas-limit <gas-limit>"),": Limit to how much gas amount allowed to be consumed")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--signer-account <signer-account>"),": Specifies predefined account as a tx signer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--signer-keyring <signer-keyring>"),": Specifies private_key as a tx signer (base64 encoded string)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--signer-mnemonic <signer-mnemonic>"),": Specifies mnemonic as a tx signer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--signer-private-key <signer-private-key>"),": Specifies private_key as a tx signer (base64 encoded string)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"-t/--timeout-height <timeout-height>"),": Specifies a block timeout height to prevent the tx from being committed past a certain height (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),")"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"beaker-wasm-proposal-query"},(0,r.kt)("inlineCode",{parentName:"h3"},"beaker wasm proposal query")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/beaker/commands/beaker_wasm_proposal_query"},">"," ",(0,r.kt)("inlineCode",{parentName:"a"},"beaker wasm proposal query"),"'s subcommands")),(0,r.kt)("p",null,"Arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--help"),": Print help information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--version"),": Print version information"))))}k.isMDXComponent=!0}}]);