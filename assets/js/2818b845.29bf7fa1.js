"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[7982],{3905:(e,o,t)=>{t.d(o,{Zo:()=>m,kt:()=>d});var a=t(67294);function s(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function l(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?l(Object(t),!0).forEach((function(o){s(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function n(e,o){if(null==e)return{};var t,a,s=function(e,o){if(null==e)return{};var t,a,s={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],o.indexOf(t)>=0||(s[t]=e[t]);return s}(e,o);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=a.createContext({}),p=function(e){var o=a.useContext(i),t=o;return e&&(t="function"==typeof e?e(o):r(r({},o),e)),t},m=function(e){var o=p(e.components);return a.createElement(i.Provider,{value:o},e.children)},c={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},u=a.forwardRef((function(e,o){var t=e.components,s=e.mdxType,l=e.originalType,i=e.parentName,m=n(e,["components","mdxType","originalType","parentName"]),u=p(t),d=s,h=u["".concat(i,".").concat(d)]||u[d]||c[d]||l;return t?a.createElement(h,r(r({ref:o},m),{},{components:t})):a.createElement(h,r({ref:o},m))}));function d(e,o){var t=arguments,s=o&&o.mdxType;if("string"==typeof e||s){var l=t.length,r=new Array(l);r[0]=u;var n={};for(var i in o)hasOwnProperty.call(o,i)&&(n[i]=o[i]);n.originalType=e,n.mdxType="string"==typeof e?e:s,r[1]=n;for(var p=2;p<l;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},81754:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>i,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>n,toc:()=>p});var a=t(87462),s=(t(67294),t(3905));const l={},r="Submit a Cosmwasm Governance Proposal",n={unversionedId:"local/submit-wasm-proposal",id:"local/submit-wasm-proposal",title:"Submit a Cosmwasm Governance Proposal",description:"The following is a quick guide to provide a basic example on how submit a wasm binary proposal in Osmosis. This particular example will be with localOsmosis but it can also be used with testnet.",source:"@site/docs/cosmwasm/local/submit-wasm-proposal.md",sourceDirName:"local",slug:"/local/submit-wasm-proposal",permalink:"/cosmwasm/local/submit-wasm-proposal",draft:!1,editUrl:"https://github.com/osmosis-labs/docs/tree/main/docs/cosmwasm/local/submit-wasm-proposal.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cosmwasm & LocalOsmosis",permalink:"/cosmwasm/local/localosmosis"},next:{title:"Cosmwasm & Beaker",permalink:"/cosmwasm/testnet/cosmwasm-beaker"}},i={},p=[{value:"Localosmosis",id:"localosmosis",level:2},{value:"Start localOsmosis",id:"start-localosmosis",level:3},{value:"Download sample contract",id:"download-sample-contract",level:2},{value:"Define variables",id:"define-variables",level:2},{value:"Define proposal ID",id:"define-proposal-id",level:2},{value:"Create local wallet from seed",id:"create-local-wallet-from-seed",level:2},{value:"Submit proposal",id:"submit-proposal",level:2},{value:"Query proposal",id:"query-proposal",level:2},{value:"Deposit on proposal",id:"deposit-on-proposal",level:2},{value:"Vote",id:"vote",level:2},{value:"Check the results",id:"check-the-results",level:2},{value:"Learn more:",id:"learn-more",level:3}],m={toc:p};function c(e){let{components:o,...t}=e;return(0,s.kt)("wrapper",(0,a.Z)({},m,t,{components:o,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"submit-a-cosmwasm-governance-proposal"},"Submit a Cosmwasm Governance Proposal"),(0,s.kt)("p",null,"The following is a quick guide to provide a basic example on how submit a wasm binary proposal in Osmosis. This particular example will be with localOsmosis but it can also be used with testnet."),(0,s.kt)("h2",{id:"localosmosis"},"Localosmosis"),(0,s.kt)("p",null,"The easiest way to setup your localOsmosis is by downloading the ",(0,s.kt)("a",{parentName:"p",href:"https://get.osmosis.zone/"},"automated installer"),". You can learn more about localOsmosis by reading the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/osmosis-labs/localosmosis"},"README")," in the official repo. "),(0,s.kt)("p",null,"Run the following and choose option #3."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"curl -sL https://get.osmosis.zone/install > i.py && python3 i.py\n")),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/SybyH7A8q.png",alt:null})),(0,s.kt)("h3",{id:"start-localosmosis"},"Start localOsmosis"),(0,s.kt)("p",null,"Inside a separate bash window start your localOsmosis which was installed in ~/localosmosis"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"cd ~/localosmosis\ndocker-compose up\n\n")),(0,s.kt)("p",null,"You will start seeing LocalOsmosis block activity in your terminal. Keep LocalOsmosis running while you perform the next steps in a new terminal window."),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"If you had previously installed localOsmosis, it's a good idea to start fresh and delete ~/localosmosis ",(0,s.kt)("inlineCode",{parentName:"p"},"rm -rf ~/localosmosis")," before installing it again.")),(0,s.kt)("h2",{id:"download-sample-contract"},"Download sample contract"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"curl -s -L -O https://github.com/CosmWasm/cw-plus/releases/download/v0.12.1/cw20_base.wasm\n")),(0,s.kt)("h2",{id:"define-variables"},"Define variables"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"CHAIN_ID=localosmosis\nCONTRACT=cw20_base\n")),(0,s.kt)("h2",{id:"define-proposal-id"},"Define proposal ID"),(0,s.kt)("p",null,"We cannot really do this programmatically. Proposal ",(0,s.kt)("inlineCode",{parentName:"p"},"1")," will come out after submitting it for the first time on a new chain. You can always update this manually when testing multiple times on the same state."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"PROPOSAL=1\n")),(0,s.kt)("h2",{id:"create-local-wallet-from-seed"},"Create local wallet from seed"),(0,s.kt)("p",null,"Note that this seed is already part of localOsmosis as shown ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/osmosis-labs/localosmosis#accounts"},"here"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'echo "satisfy adjust timber high purchase tuition stool faith fine install that you unaware feed domain license impose boss human eager hat rent enjoy dawn" | osmosisd keys add validator --keyring-backend test --recover\nVAL=$(osmosisd keys show -a validator --keyring-backend test)\n')),(0,s.kt)("h2",{id:"submit-proposal"},"Submit proposal"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'osmosisd tx gov submit-proposal wasm-store $CONTRACT.wasm --title "Add $CONTRACT" \\\n  --description "Let\'s upload this contract" --run-as $VAL \\\n  --from validator --keyring-backend test --chain-id $CHAIN_ID -y -b block \\\n  --gas 9000000 --gas-prices 0.025uosmo\n')),(0,s.kt)("h2",{id:"query-proposal"},"Query proposal"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"osmosisd query gov proposal $PROPOSAL\n")),(0,s.kt)("h2",{id:"deposit-on-proposal"},"Deposit on proposal"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"osmosisd tx gov deposit $PROPOSAL 10000000uosmo --from validator --keyring-backend test \\\n    --chain-id $CHAIN_ID -y -b block --gas 6000000 --gas-prices 0.025uosmo\n")),(0,s.kt)("h2",{id:"vote"},"Vote"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"osmosisd tx gov vote $PROPOSAL yes --from validator --keyring-backend test \\\n    --chain-id $CHAIN_ID -y -b block --gas 600000 --gas-prices 0.025uosmo\n")),(0,s.kt)("h2",{id:"check-the-results"},"Check the results"),(0,s.kt)("p",null,"Wait 1 or two minutes for the results to show up. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"osmosisd query wasm list-code\n")),(0,s.kt)("h3",{id:"learn-more"},"Learn more:"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/wasmd/blob/main/x/wasm/Governance.md"},"https://github.com/CosmWasm/wasmd/blob/main/x/wasm/Governance.md")))}c.isMDXComponent=!0}}]);